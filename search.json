[{"title":"Hello World","path":"/AiyuBlog/2024/07/02/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"path":"/AiyuBlog/2024/07/02/如何在批处理模式下运行-SKILL-How-to-run-SKILL-in-batch-mode/","content":"如何在批处理模式下运行 SKILL — How to run SKILL in batch modeProblem 问题I am unable to find a way to automate Allegro using SKILL scripts without launching the tool.我无法找到在不启动工具的情况下使用 SKILL 脚本自动运行 Allegro 的方法。 Solution 解决方案Allegro provides two different ways of automation, one using the Allegro scripts and the other using SKILL language, the second one being Turing complete and thus allowing more flexibility. Both languages provide a way to store the code recorded or created in a file to source and run it later.Allegro 提供了两种不同的自动化方式，一种是使用 Allegro 脚本，另一种是使用 SKILL 语言，其中第二种语言是图灵完备的，因此具有更大的灵活性。两种语言都提供了一种将记录或创建的代码存储到文件中的方法，以便以后进行源代码和运行。 Allegro scripts are stored in .scr files and executed in the Allegro terminal using replay .scr.Allegro 脚本存储在 .scr 文件中，并在 Allegro 终端中使用重放 &lt;文件路径&gt;.scr 执行。 SKILL scripts are stored in .il files and executed in the Allegro terminal using skill load(“.il”).SKILL 脚本存储在 .il 文件中，并通过 skill load(“.il”) 在 Allegro 终端中执行。 A SKILL script allows you to define functions. If the algorithm is defined inside one or more functions, and you want to use them, it would be necessary to call the function in the Allegro terminal.SKILL 脚本允许您定义函数。如果算法是在一个或多个函数中定义的，而您又想使用这些函数，则必须在 Allegro 终端中调用函数。 skill ()skill &lt;函数名&gt;(&lt;函数参数&gt;) Allegro allows automation in batch mode only using Allegro scripts by calling the following in your preferable shell terminal (batch, bash, cshell, etc):Allegro 只允许在批处理模式下使用 Allegro 脚本进行自动化，方法是在您喜欢的 shell 终端（batch、bash、cshell 等）中调用以下脚本： allegro -s -nograph allegro -s &lt;allegro脚本路径&gt; -nograph &lt;allegro电路板 Here, -nograph is an option to prevent the Allegro GUI from showing up. The board is also optional.在这里，-nograph 是一个选项，用于防止 Allegro 图形用户界面显示出来。电路板也是可选项。 Although you cannot directly call the SKILL script using the Allegro CLI, you can do it indirectly by creating a simple Allegro script, such as tmp.scr, which would call a SKILL script file, for instance, script.il, like the following:虽然无法使用 Allegro CLI 直接调用 SKILL 脚本，但可以通过创建一个简单的 Allegro 脚本（如 tmp.scr）来间接调用 SKILL 脚本文件（如 script.il），如下所示： skill load(“script.il”)skill ()skill &lt;函数名&gt;（&lt;函数参数&gt;）。exit 退出 Then run it, for example:然后运行它，例如 allegro -s tmp.scr -nograph Considering both files are in the same folder, this folder is currently open in the shell terminal. You must add an explicit exit command or the tool will not exit, even if it is launched in nograph mode.考虑到两个文件都在同一个文件夹中，该文件夹目前在 shell 终端中打开。您必须添加明确的退出命令，否则即使在 nograph 模式下启动，工具也不会退出。 This flow can be improved in many different ways: you can fully embed all the SKILL code in the .scr file by adding skill in the front of any command, you can call exit from the SKILL script instead, and so on.这个流程可以通过多种不同方式进行改进：可以在任何命令前添加 skill 将所有 SKILL 代码完全嵌入 .scr 文件，也可以从 SKILL 脚本中调用退出，等等。 Note: Apart from all the functionality of OrCAD&#x2F;Allegro, their X platforms (OrCAD X&#x2F;Allegro X) offer additional features and flexibility.注：除了 OrCAD&#x2F;Allegro 的所有功能外，它们的 X 平台（OrCAD X&#x2F;Allegro X）还提供额外的功能和灵活性。 ↓↓↓ Return to the top of the page返回页面顶部 ↑↑↑"},{"title":"测试","path":"/AiyuBlog/2024/07/02/测试/","content":"Hexo教程，看这一篇就够了- How to系列-CSDN博客 https://blog.csdn.net/cat_bayi&#x2F;article&#x2F;details&#x2F;128725230 2024-06-30 23:47:37 读者先看这里这篇文章是给Windows用户的，macOS也可以看哦，我就是三种系统都用滴，基本都没有问题 文章非常长，建议先收藏等到有一整天空隙时间的时候再看，非常非常长，结合实践可能要好几个小时 恭喜你，发现了宝藏，一定要坚持读完这一万多字，可能会有进阶的教程比我讲的更高级，但一定没有一个入门教程可以替代这篇文章 Bayi使用的软件版本：OS：Windows11 22H2 Node.js：18.13.0 64-bit for windows Git：2.39.1 for Windows x64 hexo-cli: 4.3.0 Visual Studio Code：1.74.3 for Windows8,10,11 x64 更新记录2023年7月30日 更新标题从“Hexo——看着一篇就够了”更改为“Hexo搭建教程？看这一篇就够了- How to系列” 更新收入How to精选教程专栏系列 添加“更新记录”板块 更新对2-3-2，2-3-3，2-3-4，9-1-2图进行文字解释，并对大佬HMM_6指出图片问题表示感谢 增加“问题解答”板块 增加“特别感谢”板块 更新“结语”字数与标题统计部分 更新目录 更新并独立“读者先看这里”板块 2023年8月4日 标题从“Hexo搭建教程？看这一篇就够了- How to系列”更改为“Hexo教程，看这一篇就够了- How to系列” 更新“2023年7月30日”更新记录，使其更加规范 更新“特别感谢”模块 更新“读者先看这里” 更新“结语”统计字数与标题统计部分，将不规范“大项”更改为更加统一的“父项” 更新目录 Hexo是什么 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页 ——Hexo官网 Hexo可以简单快速的搭建你的个人Blog并部署到你的域名或折到Github Pages当然，也可以是Gitlab Pages 具体可以参照Hexo官网 Gitlab Pages 在此之前Node.jsHexo是基于Node.js构建的，所以我们需要下载TA 中文官网：去下载 P.S.：这里建议大家下载长期维护版，相比于最新尝鲜版，长期维护版会更加稳定 在整个项目中，Bayi的Node.js版本使用的是18.13.0，如果你的Node.js版本比Bayi的版本低或高，也许但未必会出现不兼容，报错的情况 在你的Windows没有Node.js的情况下打开后缀名为.msi的Windows Installer程序包，你会看到下图的界面 2-1-1 许可协议点击Next,将看到2-1-2图的界面 2-1-2 #### 选择安装地址 按照2-1-2图的提示操作后，点击Next，选择安装地址，默认在“ C:\\Program Files odejs\\ ”建议改到其他盘符，如Bayi的D盘专门用来装软件，所以Bayi的安装地址为“ D: odejs\\ ”，见2-1-3图 2-1-3 选择安装组件点击Next，见2-1-4图 2-1-4 全部选择后点击Next，见2-1-5图 2-1-5 安装点击Next后，见2-1-6图 2-1-6 等待安装完成后点击“ Finish ”，见2-1-7图和2-1-8图 2-1-7 2-1-8 检查安装安装完成后打开Powershell，见2-1-9图和2-1-10图 P.S.:Win+R打开运行 2-1-9 2-1-10 更改全局模块所在路径和缓存路径地址如果你的运行效果和Bayi一样，请继续往下看 下面，我们把全局模块所在路径和缓存路径放在自己的Node.js安装的文件夹中 在安装目录下新建【node_global】【node_cache】文件夹，见2-1-11图 2-1-11 在刚才的Powershell中输入这两个命令，具体见2-1-12图 2-1-12 搜索系统环境变量并打开“ 编辑系统环境变量 ”，选择“ 环境变量 ”即可见到2-1-13图的窗口 2-1-13 新建用户环境变量，变量名命名为“ NODE_PATH”，变量值为你的Node.js的安装路径，见2-1-14 2-1-14 之后点击确定，在系统变量中找到“ Path ”，添加Nodejs全局文件夹，也就是刚才新建的 “ node_global ”文件夹的绝对路径，见2-1-15图 2-1-15 之后依次点击确定即可 Git"},{"title":"20款Visual Studio实用插件推荐","path":"/AiyuBlog//post/20-visual-studio-practical-plug-in-recommendations-z22wzip.html","content":"20款Visual Studio实用插件推荐页面信息 笔记类型: page , 星标: false 标签: 作者: dotNET跨平台 , 域名: mp.weixin.qq.com , 域名2: qq.com 原文链接 , 五彩链接 创建时间: 2024-03-05 15:55 , 更新时间: 2024-03-05 15:57 划线列表全文剪藏 dotNET跨平台 ​​ ​​ 前言俗话说的好工欲善其事必先利其器，安装一些实用的Visual Studio插件对自己日常的开发和工作效率能够大大的提升，避免996从选一款好的IDE实用插件开始。以下是我认为比较实用的Visual Studio插件，希望对大家有所帮助。 各位小伙伴有更好的Visual Studio插件推荐可在文末留言🤞。 ​扩展=&gt;管理扩展:​ ​​ ​​ Visual Studio插件市场 https://marketplace.visualstudio.com/ ​​ ReSharper（付费） ReSharper 是一个用于 Visual Studio 的强大插件，它为.NET开发者提供了许多功能，以提高编码效率、代码质量和开发体验。旨在帮助.NET开发者编写高质量、高效的代码，并提供了许多辅助工具来改进开发流程和减少常见的编码错误。（特别注意：电脑内存小的同学慎用，该插件十分占用内存）！ 插件市场地址：https://marketplace.visualstudio.com/items?itemName=JetBrains.ReSharper ​​ ​​ ​​ GitHub Copilot（付费） GitHub Copilot 是一款AI辅助工具，帮助开发者更快速、智能地编写高质量代码。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=GitHub.copilotvs ​​ ​​ ​​ CodeMaid（免费） CodeMaid 是 Visual Studio 的开源扩展，用于清理和简化 C#、C++、F#​、VB、PHP、PowerShell、R、JSON、XAML、XML、ASP、HTML、CSS、LESS、SCSS、JavaScript 和 TypeScript 编码。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=SteveCadwallader.CodeMaidVS2022 ​​ ​​ CSharpier（免费） CSharpier 是一个用于 C# 代码的代码格式化工具。它是一个基于 Roslyn 的工具，它会解析您的 C# 代码，然后根据特定的规则重新格式化它，使其符合 CSharpier 的代码风格。这个工具的设计目的是使代码风格保持一致，从而提高代码的可读性和可维护性。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=csharpier.CSharpier#report-abuse 格式之前​​ 格式之后​​ Visual Studio Theme Pack（免费） Visual Studio流行主题集。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=idex.vsthemepack ​​ Indent Guides（免费） 显示代码缩进线，有助于保持代码的结构清晰。页宽标记有三种样式：实线、点线面和虚线，有粗细之分，颜色也可自定义。默认为灰色虚线，如图所示。每个缩进级别可以有不同的样式和颜色。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=SteveDowerMSFT.IndentGuides2022 ​​ ​​ Markdown Editor（免费） 功能齐全的 Markdown 编辑器，具有实时预览和语法高亮功能。支持 GitHub 版本的 Markdown。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=MadsKristensen.MarkdownEditor ​​ HTML Snippet Pack（免费） 它提供了一组预定义的 HTML 代码段（snippets），以帮助开发者更快速地编写 HTML 代码。这些代码段是预先定义的代码模板，可以通过简单的代码缩写触发，然后自动生成相应的 HTML 代码块，从而提高编写 HTML 的效率和准确性。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=MadsKristensen.HTMLSnippetPack ​​ Ozcode（付费） Ozcode 是一个用于 Visual Studio 的插件拓展，旨在优化和简化 C# 调试过程。它提供了一系列功能，可以帮助开发人员更快速地检测和解决代码中的错误，从而提高调试效率和开发生产力。这个插件拓展使调试变得更加直观和高效，有助于加速软件开发周期。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=CodeValueLtd.OzCode ​​ ​​ Live Share（免费） 它的主要功能是支持实时协作开发，并让开发人员能够在他们最喜欢的开发工具中进行协作。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsls-vs ​​ ​​ ​​ CodeRush（免费） CodeRush是用于Visual Studio 2022的功能强大且快速的代码创建、调试、导航、重构、分析和可视化工具（一个完全免费的能和ReSharper匹敌插件）。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=DevExpress.CodeRushforVS2022 ​​ ​​ ​​ ​​ Codist（免费） 致力于为 C# 程序员提供更佳的编码体验和效率的 Visual Studio 扩展，增强了语法高亮、快速信息（工具提示）、导航栏、滚动条、显示质量，并带来了自动更新的版本号、智能工具栏与高级编辑、代码分析和重构命令等。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=wmj.Codist ​​ ​​ EF Core Power Tools（免费） 其作用是增强Entity Framework Core（EF Core）的开发体验,旨在简化Entity Framework Core应用程序的开发和维护过程，提供可视化工具和分析功能，以加速数据库相关任务的完成。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=ErikEJ.EFCorePowerTools ​​ Visual Assist（付费） 一款提高C&#x2F;C++和C#开发者生产力的工具，改进了与IDE相关的导航、重构、代码生成和编码辅助功能，同时提供了针对UE4的特定工具。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=WholeTomatoSoftware.VisualAssist ​​ ​​ Viasfora（免费） 旨在提供更好的代码编辑体验，包括语法高亮、括号匹配、代码折叠等功能，同时支持多种编程语言。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=TomasRestrepo.Viasfora ​​ ​​ ​​ SQL Search（免费） 加速SQL Server数据库开发，通过在Visual Studio中快速查找SQL对象。可快速搜索数据库中的SQL片段，并轻松导航到这些对象。这可以节省时间，提高团队的生产力，让您可以回到手头的任务 插件市场地址：https://marketplace.visualstudio.com/items?itemName=vs-publisher-306627.RedgateSQLSearch ​​ Web Essentials（免费） 一款提供HTML&#x2F;CSS&#x2F;JavaScript语法高亮、自动完成、代码检查等功能的实用插件。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebEssentials2019 ​​ ​​ Supercharger（免费） Supercharger是一款用于Visual Studio的插件，旨在提供性能优化、代码增强、代码导航、文档和项目管理等功能，以增强开发体验和提高开发效率。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=MichaelKissBG8.Supercharger22 ​​ ​​ EFCore.Visualizer（免费） 一款可以直接在Visual Studio中查看EF Core查询计划调试器可视化工具（帮助开发者分析和优化数据库查询性能），支持SQL Server和PostgreSQL两个数据库。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=GiorgiDalakishvili.EFCoreVisualizer ​​ SQL Server:​​ ​​ PostgreSQL:​​ ​​ Solution Colors（免费） Solution Colors允许将颜色与解决方案关联起来，并在 Visual Studio 的不同位置显示。灵感来自 VS Code 的 Peacock 扩展。 插件市场地址：https://marketplace.visualstudio.com/items?itemName=MadsKristensen.SolutionColors ​​ ​​ ​​","tags":["插件"],"categories":["VScode"]}]